// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220204200119_ForeignKeysAdded")]
    partial class ForeignKeysAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.FeatEntity", b =>
                {
                    b.Property<int>("FeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeatBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FeatCombatFeat")
                        .HasColumnType("bit");

                    b.Property<string>("FeatDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatNormal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatPrerequisites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatSpecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Feats");
                });

            modelBuilder.Entity("Data.Entities.GroupEntity", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Data.Entities.PlayerCharacterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Backstory")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Models.Character.PlayerCharacterList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupEntityGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupEntityGroupId");

                    b.ToTable("PlayerCharacterList");
                });

            modelBuilder.Entity("Data.Entities.FeatEntity", b =>
                {
                    b.HasOne("Data.Entities.PlayerCharacterEntity", "Character")
                        .WithMany("Feats")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Data.Entities.PlayerCharacterEntity", b =>
                {
                    b.HasOne("Data.Entities.GroupEntity", "GroupName")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("GroupName");
                });

            modelBuilder.Entity("Models.Character.PlayerCharacterList", b =>
                {
                    b.HasOne("Data.Entities.GroupEntity", null)
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupEntityGroupId");
                });

            modelBuilder.Entity("Data.Entities.GroupEntity", b =>
                {
                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("Data.Entities.PlayerCharacterEntity", b =>
                {
                    b.Navigation("Feats");
                });
#pragma warning restore 612, 618
        }
    }
}
